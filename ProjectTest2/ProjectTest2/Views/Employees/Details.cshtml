@model Employee

@{
    ViewData["Title"] = "Employee Details";
}

<h1>Employee Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Email)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Email)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.PhoneNumber)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.PhoneNumber)</dd>

        <dt class="col-sm-3">Position</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Position.Name)</dd>

        <dt class="col-sm-3">Languages</dt>
        <dd class="col-sm-9">
            @if (Model.EmployeeLanguages != null && Model.EmployeeLanguages.Any())
            {
                    <ul>
                    @foreach (var el in Model.EmployeeLanguages)
                    {
                                <li>@el.Language.Name</li>
                    }
                    </ul>
            }
            else
            {
                    <span>None specified</span>
            }
        </dd>

        <dt class="col-sm-3">Gender</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Gender.Name)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.CreatedAt)</dt>
        <dd class="col-sm-9">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>

        @if (Model.UpdatedAt.HasValue)
        {
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.UpdatedAt)</dt>
                <dd class="col-sm-9">@Model.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm:ss")</dd>
        }
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a> |
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>