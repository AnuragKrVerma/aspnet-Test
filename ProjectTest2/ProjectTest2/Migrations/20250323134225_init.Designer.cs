// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTest2.Data;

#nullable disable

namespace ProjectTest2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250323134225_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectTest2.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LanguagesString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 18, 21, 30, 47, 0, DateTimeKind.Unspecified),
                            Email = "ABC@example.com",
                            GenderId = 1,
                            LanguagesString = "English,French",
                            Name = "ABC",
                            PhoneNumber = "1234567890",
                            PositionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 18, 21, 30, 47, 0, DateTimeKind.Unspecified),
                            Email = "DEF@example.com",
                            GenderId = 2,
                            LanguagesString = "English,Spanish,German",
                            Name = "DEF",
                            PhoneNumber = "9876543210",
                            PositionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 18, 21, 30, 47, 0, DateTimeKind.Unspecified),
                            Email = "HIJ@example.com",
                            GenderId = 1,
                            LanguagesString = "English,Hindi",
                            Name = "HIJ",
                            PhoneNumber = "5554443333",
                            PositionId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 18, 21, 30, 47, 0, DateTimeKind.Unspecified),
                            Email = "KML@example.com",
                            GenderId = 2,
                            LanguagesString = "English,French,Chinese",
                            Name = "KML",
                            PhoneNumber = "1112223333",
                            PositionId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 18, 21, 30, 47, 0, DateTimeKind.Unspecified),
                            Email = "NOP@example.com",
                            GenderId = 3,
                            LanguagesString = "English,Chinese,Japanese",
                            Name = "NOP",
                            PhoneNumber = "4445556666",
                            PositionId = 5
                        });
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.EmployeeLanguage", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("EmployeeLanguages");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            LanguageId = 1
                        },
                        new
                        {
                            EmployeeId = 1,
                            LanguageId = 3
                        },
                        new
                        {
                            EmployeeId = 2,
                            LanguageId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            LanguageId = 2
                        },
                        new
                        {
                            EmployeeId = 2,
                            LanguageId = 4
                        },
                        new
                        {
                            EmployeeId = 3,
                            LanguageId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            LanguageId = 6
                        },
                        new
                        {
                            EmployeeId = 4,
                            LanguageId = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            LanguageId = 3
                        },
                        new
                        {
                            EmployeeId = 4,
                            LanguageId = 5
                        },
                        new
                        {
                            EmployeeId = 5,
                            LanguageId = 1
                        },
                        new
                        {
                            EmployeeId = 5,
                            LanguageId = 5
                        },
                        new
                        {
                            EmployeeId = 5,
                            LanguageId = 7
                        });
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 3,
                            Name = "French"
                        },
                        new
                        {
                            Id = 4,
                            Name = "German"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Japanese"
                        });
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Developer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Designer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 4,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 5,
                            Name = "QA"
                        });
                });

            modelBuilder.Entity("ProjectTest2.Models.Employee", b =>
                {
                    b.HasOne("ProjectTest2.Models.Helper.Gender", "Gender")
                        .WithMany("Employees")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectTest2.Models.Helper.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.EmployeeLanguage", b =>
                {
                    b.HasOne("ProjectTest2.Models.Employee", "Employee")
                        .WithMany("EmployeeLanguages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectTest2.Models.Helper.Language", "Language")
                        .WithMany("EmployeeLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ProjectTest2.Models.Employee", b =>
                {
                    b.Navigation("EmployeeLanguages");
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.Gender", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.Language", b =>
                {
                    b.Navigation("EmployeeLanguages");
                });

            modelBuilder.Entity("ProjectTest2.Models.Helper.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
